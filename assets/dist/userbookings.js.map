{"version":3,"file":"userbookings.js","mappings":";;;;;;;;;;;AAAA;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACN4B;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA,WAAW,+BAA+B;AAC1C;AACA;AACA,CAAC;;AAED,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA,UAAU,QAAQ;AAClB;AACA;AACA,SAAS,+BAA+B,kCAAkC,MAAM;AAChF;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,GAAG;AACH;;AAEA,YAAY,QAAQ;AACpB;AACA,iEAAiE,UAAU;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,6BAA6B,iBAAiB,4BAA4B,aAAa;;AAEvF;AACA,uBAAuB,WAAW,MAAM,UAAU;;AAElD;AACA,qBAAqB,SAAS,MAAM,QAAQ;;AAE5C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,+BAA+B;AACtC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;;AAEL,yCAAyC,GAAG;;AAE5C;AACA,EAAE;;AAEF,YAAY,QAAQ;AACpB;AACA,0BAA0B,GAAG;AAC7B,EAAE","sources":["webpack://@fullcalendar-example-projects/webpack/./src/userbookings.css","webpack://@fullcalendar-example-projects/webpack/webpack/bootstrap","webpack://@fullcalendar-example-projects/webpack/webpack/runtime/make namespace object","webpack://@fullcalendar-example-projects/webpack/./src/userbookings.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import \"./userbookings.css\";\n\nconst element = document.getElementById(\"booking-filters-user_bookings\");\nconst elementId = element.getAttribute(\"booking-element-id\");\nlet elementSettings;\n/* eslint no-underscore-dangle: 0 */\n/**\n * Provide an overview of user bookings with data from Drupal.\n *\n * @param {object} drupalSettings : Drupal settings added to this js.\n */\n(function (drupalSettings) {\n  elementSettings = drupalSettings.user_bookings[elementId];\n  fetch(`${elementSettings.front_page_url}/itkdev_booking/user-bookings`)\n    .then((response) => response.json())\n    .then((data) => handleData(data));\n})(drupalSettings);\n\n/** @param {object} bookingData : Data object retrieved from api endpoint */\nfunction handleData(bookingData) {\n  let dataFormatted = [];\n  dataFormatted = bookingData[\"hydra:member\"];\n  dataFormatted.forEach(function (value, index) {\n    let { hitId } = value;\n    hitId = btoa(hitId);\n    fetch(\n      `${elementSettings.front_page_url}/itkdev_booking/booking-details/${hitId}`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        dataFormatted[index].displayName = data[\"hydra:member\"][0].displayName;\n        dataFormatted[index].eventBody = data[\"hydra:member\"][0].body;\n        appendElementToBookingContainer(dataFormatted[index]);\n      });\n  });\n}\n\n/** @param {object} data : Formatted data object retrieved from api endpoint */\nfunction appendElementToBookingContainer(data) {\n  const bookingContainer = element.querySelector(`div.bookings-${elementId}`);\n  const loaderPresent = element.querySelector(\"div.loader\") !== null;\n  if (loaderPresent) {\n    bookingContainer.innerHTML = \"\";\n  }\n  if (data.start === null || data.end === null) {\n    return false;\n  }\n  const startDate = new Date(data.start).toLocaleDateString(\"da-dk\", {\n    weekday: \"short\",\n    year: \"numeric\",\n    month: \"short\",\n    day: \"numeric\",\n  });\n  const startTime = new Date(data.start).toLocaleTimeString(\"da-dk\", {\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n  });\n  const endDate = new Date(data.end).toLocaleDateString(\"da-dk\", {\n    weekday: \"short\",\n    year: \"numeric\",\n    month: \"short\",\n    day: \"numeric\",\n  });\n  const endTime = new Date(data.end).toLocaleTimeString(\"da-dk\", {\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n  });\n\n  const deleteButton = document.createElement(\"button\");\n  deleteButton.classList.add(\"btn\");\n  deleteButton.classList.add(\"btn-danger\");\n  deleteButton.innerText = \"Slet booking\";\n  deleteButton.onclick = function (e) {\n    e.preventDefault();\n    // removeBooking(data.id);\n  };\n\n  const location = document.createElement(\"span\");\n  location.classList.add(\"location\");\n  location.innerHTML = `<b>${data.displayName}</b><span class='subject'>${data.subject}</span>`;\n\n  const start = document.createElement(\"span\");\n  start.innerHTML = `${startDate} kl. ${startTime}`;\n\n  const end = document.createElement(\"span\");\n  end.innerHTML = `${endDate} kl. ${endTime}`;\n\n  const container = document.createElement(\"div\");\n  const dateContainer = document.createElement(\"div\");\n  dateContainer.classList.add(\"date-container\");\n\n  const buttonContainer = document.createElement(\"div\");\n  buttonContainer.classList.add(\"button-container\");\n\n  container.setAttribute(\"data-id\", data.id);\n  container.classList.add(\"user-booking\");\n  container.append(location);\n  dateContainer.append(start, \"â†’\", end);\n  container.append(dateContainer);\n  buttonContainer.append(deleteButton);\n  container.append(buttonContainer);\n  bookingContainer.append(container);\n}\n\n/** @param {string} id : unique id of the booking to be removed */\n/* function removeBooking(id) {\n  const params = {\n    param1: \"test1\",\n    param2: \"test2\",\n  };\n  const options = {\n    method: \"POST\",\n    body: JSON.stringify(params),\n  };\n  fetch(\n    `${elementSettings.front_page_url}/itkdev_booking/remove-booking`,\n    options\n  )\n    .then(function (response) {\n      return response.json();\n    })\n    .then(function (myJson) {\n      console.log(myJson);\n    });\n\n  document.querySelector(`div[data-id='${id}']`).remove();\n\n  return;\n} */\n\n/** @param {string} id : id of the booking to be edited */\n/* function editBooking(id) {\n  alert(`edit booking - ${id}`);\n} */\n"],"names":[],"sourceRoot":""}